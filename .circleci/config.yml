version: 2.1

aliases:
  - &restore_cache
    restore_cache:
      key: go-mod-v1-{{ checksum "go.sum" }}
  - &save_cache
    save_cache:
      key: go-mod-v1-{{ checksum "go.sum" }}
      paths:
      - "/go/pkg/mod"
        

commands:
  install-golangci-lint:
    description: Install golangci-lint
    parameters:
      version:
        type: string
        default: 1.23.0
      gobin:
        type: string
        default: /go/bin
      prefix:
        type: string
        default: v1
        description: Prefix for cache key to store the binary.
    steps:
      - restore_cache:
          name: Restore golangci-lint cache
          keys: ['<< parameters.prefix >>-golangci-lint-{{ arch }}-<< parameters.version >>']
      - run:
          name: Install golangci-lint
          command: |
            mkdir -p << parameters.gobin >>
            command -v << parameters.gobin >>/golangci-lint && exit
            download=https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh
            wget -O- -q $download | sh -s -- -b << parameters.gobin >>/ v<< parameters.version >>
      - save_cache:
          name: Save golangci-lint cache
          key: '<< parameters.prefix >>-golangci-lint-{{ arch }}-<< parameters.version >>'
          paths: [<< parameters.gobin >>/golangci-lint]
        
jobs:
  build:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - install-golangci-lint
      - *restore_cache
      - run: make verify-gomod
      - run: make package
      - *save_cache      
      - persist_to_workspace:
          root: .
          paths:
            - ./build/*.tar.gz
            - ./build/*.zip

  publish-github-release:
    docker:
      - image: cibuilds/github:0.12
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./build/*.tar.gz
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./build/*.zip

  test:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - install-golangci-lint
      - *restore_cache
      - run: make verify-gomod
      - run: make check-style
      - run: make test
      - *save_cache
            
workflows:
  version: 2
  untagged-build:
    jobs:
      - test
  tagged-build:
    jobs:
      - test:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-github-release:
          context: matterbuild-github-token
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
